
/*
	Testes Realizados:

•	A constante inteira usada no dimensionamento de uma variável indexada deve ser maior do que zero.
•	Variáveis escalares não podem ter subscritos.
•	O número de subscritos de uma variável indexada deve ser igual ao seu número de dimensões declarado.
•	Os elementos de uma variável indexada só poderão ser atribuídos ou receber atribuição um de cada vez.
•	Os elementos de uma variável indexada só poderão ser lidos, ou escritos um de cada vez.
•	A expressão aritmética no subscrito de uma variável indexada deve ser do tipo inteiro ou caractere.

 */

globais:
	int arrayB[0]

***** Exception<Esperado>: Valor inteiro positivo *****
, arrayC[1];

funcoes:
vazio Func () {
locais:
	int var;
	int array[4][4][4];
comandos:
	var[0]

***** Exception<Nao Esperado>: Subscrito(s) *****
 := 1;
	array[0][0]

***** Exception<Incompatibilidade>: Numero de subscritos incompativel com declaracao *****
 := 1;
	array[0][0][0] := 1;
	array[0][0][0][0]

***** Exception<Incompatibilidade>: Numero de subscritos incompativel com declaracao *****
 := 1;
	ler (arrayC

***** Exception<Esperado>: Subscrito(s) *****
);
	escrever (arrayC

***** Exception<Esperado>: Subscrito(s) *****
);
	ler (arrayC[0]);
	var := arrayC[(2 - 1)];
	var := arrayC[('b' - 'a')];
	var := arrayC[false]

***** Exception<Incompatibilidade>: Tipo inadequado para subscrito *****
;
	var := arrayC[1]

***** Exception<Incompatibilidade>: Tipo inadequado para subscrito *****
;
}
vazio Atrib () {
locais:
	int var1[10], var2[10];
comandos:
	var1

***** Exception<Esperado>: Subscrito(s) *****
 := var2

***** Exception<Esperado>: Subscrito(s) *****
;
}
principal {
locais:
	int var;
comandos:
	;
}

var: Nao Inicializada
var: Nao Referenciada
var2: Nao Inicializada
arrayB: Nao Inicializada
arrayB: Nao Referenciada


   TABELA  DE  SIMBOLOS:

Classe 5:
  (Func    , IDFUNC, vazio , escopo: Global
	Variaveis: int var, int array[4][4][4]
	Parametros: NULL);
Classe 7:
  (var     , IDVAR, int   , 0, 0, escopo: Principal);
  (var     , IDVAR, int   , 1, 1, escopo: Func);
Classe 10:
  (Principal, IDFUNC, vazio , escopo: Global
	Variaveis: int var
	Parametros: NULL);
  (var1    , IDVAR, int   , 1, 1, EH ARRAY
	ndims = 1, dimensoes:  10, escopo: Atrib);
Classe 11:
  (var2    , IDVAR, int   , 0, 1, EH ARRAY
	ndims = 1, dimensoes:  10, escopo: Atrib);
  (arrayB  , IDVAR, int   , 0, 0, EH ARRAY
	ndims = 1, dimensoes:  0, escopo: Global);
Classe 12:
  (arrayC  , IDVAR, int   , 1, 1, EH ARRAY
	ndims = 1, dimensoes:  1, escopo: Global);
Classe 14:
  (array   , IDVAR, int   , 1, 1, EH ARRAY
	ndims = 3, dimensoes:  4  4  4, escopo: Func);
Classe 15:
  (Atrib   , IDFUNC, vazio , escopo: Global
	Variaveis: int var1[10], int var2[10]
	Parametros: NULL);
Classe 18:
  (Global  , IDGLOB, null  , escopo: NULL
	Variaveis: int arrayB[0], int arrayC[1]
	Funcoes: vazio Func, vazio Atrib, vazio Principal);
