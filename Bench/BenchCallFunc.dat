/*
	Testes Realizados:

•	O identificador de uma chamada de procedimento e o identificador de uma chamada de função deve ser do tipo nome de função. 
•	Um identificador de variável e de parâmetro deve ser do tipo nome de variável.
•	O tipo de variável correspondente ao identificador de uma chamada de procedimento deve ser o tipo vazio.
•	O tipo de variável correspondente ao identificador de uma chamada de função não deve ser o tipo vazio.
•	O número de argumentos na chamada de uma função ou procedimento deve ser igual ao número de parâmetros do mesmo. 
•	Deve haver compatibilidade entre um argumento de chamada de uma função ou procedimento e seu parâmetro correspondente, conforme a seguinte tabela:

								Tipo do parâmetro	Tipo do argumento
								Inteiro	Expressão inteira ou caractere
								Real	Expressão inteira, real ou caractere
								Caractere	Expressão inteira ou caractere
								Lógico	Expressão de valor lógico

 */

globais:
	int varint;
	real varreal;
	carac varchar;
	logico varlogico;
funcoes:

vazio InserirVazio() {
locais:
	int var;
comandos:
	;
}

vazio InserirVazio(int a) {
locais:
	int var;
comandos:
	;
}

vazio InserirVariosVazio(int a, real b, carac c, logico d) {
locais:
	int var;
comandos:
	;
}

int InserirOne (int a) {
locais:
	int var;
comandos:
	retornar a;
}

int Inserir (int a, int b) {
locais:
	int var;
comandos:
	var := a + b;
	retornar var;
}

int InserirVarios (int a, real b, carac c, logico d) {
locais:
	int var;
comandos:
	retornar a;
}

principal {
locais:
	int var;
comandos:
	var := InserirOne(varint);
	var := InserirOne();
	var := InserirOne(varint, varint);

	var := InserirOne(varlogico);
	var := InserirOne(varlogico);

	var := Inserir(varint, varint);

	var := InserirVarios(varint, varreal, varchar, varlogico);
	var := InserirVarios(varint, varreal, varlogico, varchar);
	var := InserirVarios(varreal, varint, varlogico, varchar);
	var := InserirVazio();

	chamar InserirVazio();
	chamar InserirOne(varint);
	chamar InserirVazio(varint);
	
	chamar InserirVariosVazio(varint, varreal, varchar, varlogico);
	chamar InserirVariosVazio(varint, varreal, varlogico, varchar);
	chamar InserirVariosVazio(varreal, varint, varlogico, varchar);

	var := InserirNenhum();

	chamar varint();
	/*
	var := Inserir(varint, varint);
	var := Inserir(varint);
	var := Inserir(varint, varint, varint);

	var := Inserir(varint, varreal);
	var := Inserir(varint, varchar);
	var := Inserir(varint, varlogico);
	*/
}
