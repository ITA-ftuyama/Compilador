

/*  Programa de teste */

globais:
	int i;
funcoes:

vazio Inserir (int posic) {
locais:
	int i;
comandos:
	i := posic * 6;
	escrever ("posic = ", posic);
	escrever ("posic * 6 = ", i);
}

int Subtracao (int var1, int var2) {
locais:
	int i;
comandos:
	escrever ("var1 = ", var1);
	escrever ("var2 = ", var2);
	escrever ("var1/var2 = ", (var1 / var2));
	retornar var1 - var2;
}


/*  Funcao principal  */

principal {
locais:
	int j, f, array[3];
comandos:
	j := Subtracao (4, 2);
	escrever ("4 - 2 = ", j);
	se (!(j > 0)) {
		i := 1;
	}
	senao {
		i := 2;
	}
	chamar Inserir(i);
	array[0] := 17;
	array[1] := 21;
	array[2] := 11;
	para (f := 0; f < 3; f := f + 1) {
		escrever ("i = ", i, " j = ", j, " f = ", f);
		escrever ("array[", f, "] = ", array[f]);
	}
}

i: Nao Inicializada
i: Nao Referenciada


	TABELA  DE  SIMBOLOS:

Classe 4:
  (##1     , IDVAR, int   , 1, 1, escopo: Inserir);
Classe 5:
  (##2     , IDVAR, int   , 1, 1, escopo: Subtracao);
Classe 6:
  (##10    , IDVAR, logico, 1, 1, escopo: Principal);
  (##3     , IDVAR, int   , 1, 1, escopo: Subtracao);
Classe 7:
  (##11    , IDVAR, int   , 1, 1, escopo: Principal);
  (##4     , IDVAR, int   , 1, 1, escopo: Principal);
Classe 8:
  (##12    , IDVAR, int   , 1, 1, escopo: Principal);
  (##5     , IDVAR, logico, 1, 1, escopo: Principal);
Classe 9:
  (##13    , IDVAR, int   , 1, 1, escopo: Principal);
  (##6     , IDVAR, logico, 1, 1, escopo: Principal);
Classe 10:
  (##7     , IDVAR, int   , 1, 1, escopo: Principal);
  (f       , IDVAR, int   , 1, 1, escopo: Principal);
  (Principal, IDFUNC, vazio , escopo: Global
	Variaveis: int ##13, int ##12, int ##11, logico ##10, int ##9, int ##8, int ##7, logico ##6, logico ##5, int ##4, int array[3], int f, int j
	Parametros: NULL);
  (var1    , IDVAR, int   , 1, 1, escopo: Subtracao);
Classe 11:
  (##8     , IDVAR, int   , 1, 1, escopo: Principal);
  (var2    , IDVAR, int   , 1, 1, escopo: Subtracao);
Classe 12:
  (##9     , IDVAR, int   , 1, 1, escopo: Principal);
  (Subtracao, IDFUNC, int   , escopo: Global
	Variaveis: int ##3, int ##2, int i
	Parametros: int var2, int var1);
Classe 13:
  (i       , IDVAR, int   , 0, 0, escopo: Subtracao);
  (i       , IDVAR, int   , 1, 1, escopo: Inserir);
  (posic   , IDVAR, int   , 1, 1, escopo: Inserir);
  (i       , IDVAR, int   , 1, 1, escopo: Global);
Classe 14:
  (array   , IDVAR, int   , 1, 1, EH ARRAY
	ndims = 1, dimensoes:  3, escopo: Principal);
  (j       , IDVAR, int   , 1, 1, escopo: Principal);
Classe 18:
  (Global  , IDGLOB, null  , escopo: NULL
	Variaveis: int i
	Funcoes: vazio Principal, int Subtracao, vazio Inserir);
Classe 19:
  (Inserir , IDFUNC, vazio , escopo: Global
	Variaveis: int ##1, int i
	Parametros: int posic);


	CODIGO INTEMEDIARIO:


Quadruplas do modulo Global:

	   1# OPENMOD, (MODULO, Global), (IDLE), (IDLE)
	   2#    CALL, (PROC, Principal), (INT, 0), (IDLE)
	   3#    EXIT, (IDLE), (IDLE), (IDLE)

Quadruplas do modulo Inserir:

	   1# OPENMOD, (MODULO, Inserir), (IDLE), (IDLE)
	   2#    MULT, (VAR, posic), (INT, 6), (VAR, ##1)
	   3#   ATRIB, (VAR, ##1), (IDLE), (VAR, i)
	   4#   PARAM, (CADEIA, posic = ), (IDLE), (IDLE)
	   5#   PARAM, (VAR, posic), (IDLE), (IDLE)
	   6#   WRITE, (INT, 2), (IDLE), (IDLE)
	   7#   PARAM, (CADEIA, posic * 6 = ), (IDLE), (IDLE)
	   8#   PARAM, (VAR, i), (IDLE), (IDLE)
	   9#   WRITE, (INT, 2), (IDLE), (IDLE)
	  10#     RET, (IDLE), (IDLE), (IDLE)

Quadruplas do modulo Subtracao:

	   1# OPENMOD, (MODULO, Subtracao), (IDLE), (IDLE)
	   2#   PARAM, (CADEIA, var1 = ), (IDLE), (IDLE)
	   3#   PARAM, (VAR, var1), (IDLE), (IDLE)
	   4#   WRITE, (INT, 2), (IDLE), (IDLE)
	   5#   PARAM, (CADEIA, var2 = ), (IDLE), (IDLE)
	   6#   PARAM, (VAR, var2), (IDLE), (IDLE)
	   7#   WRITE, (INT, 2), (IDLE), (IDLE)
	   8#   PARAM, (CADEIA, var1/var2 = ), (IDLE), (IDLE)
	   9#     DIV, (VAR, var1), (VAR, var2), (VAR, ##2)
	  10#   PARAM, (VAR, ##2), (IDLE), (IDLE)
	  11#   WRITE, (INT, 2), (IDLE), (IDLE)
	  12#   MENOS, (VAR, var1), (VAR, var2), (VAR, ##3)
	  13#     RET, (VAR, ##3), (IDLE), (IDLE)

Quadruplas do modulo Principal:

	   1# OPENMOD, (MODULO, Principal), (IDLE), (IDLE)
	   2#   PARAM, (INT, 4), (IDLE), (IDLE)
	   3#   PARAM, (INT, 2), (IDLE), (IDLE)
	   4#    CALL, (FUNC, Subtracao), (INT, 2), (VAR, ##4)
	   5#   ATRIB, (VAR, ##4), (IDLE), (VAR, j)
	   6#   PARAM, (CADEIA, 4 - 2 = ), (IDLE), (IDLE)
	   7#   PARAM, (VAR, j), (IDLE), (IDLE)
	   8#   WRITE, (INT, 2), (IDLE), (IDLE)
	   9#      GT, (VAR, j), (INT, 0), (VAR, ##5)
	  10#     NOT, (VAR, ##5), (IDLE), (VAR, ##6)
	  11#      JF, (VAR, ##6), (IDLE), (ROTULO, 14)
	  12#   ATRIB, (INT, 1), (IDLE), (VAR, i)
	  13#    JUMP, (IDLE), (IDLE), (ROTULO, 16)
	  14#     NOP, (IDLE), (IDLE), (IDLE)
	  15#   ATRIB, (INT, 2), (IDLE), (VAR, i)
	  16#     NOP, (IDLE), (IDLE), (IDLE)
	  17#   PARAM, (VAR, i), (IDLE), (IDLE)
	  18#    CALL, (PROC, Inserir), (INT, 1), (IDLE)
	  19#     IND, (INT, 0), (IDLE), (IDLE)
	  20#   INDEX, (VAR, array), (INT, 1), (VAR, ##7)
	  21# ATRIBPONT, (INT, 17), (IDLE), (VAR, ##7)
	  22#     IND, (INT, 1), (IDLE), (IDLE)
	  23#   INDEX, (VAR, array), (INT, 1), (VAR, ##8)
	  24# ATRIBPONT, (INT, 21), (IDLE), (VAR, ##8)
	  25#     IND, (INT, 2), (IDLE), (IDLE)
	  26#   INDEX, (VAR, array), (INT, 1), (VAR, ##9)
	  27# ATRIBPONT, (INT, 11), (IDLE), (VAR, ##9)
	  28#   ATRIB, (INT, 0), (IDLE), (VAR, f)
	  29#     NOP, (IDLE), (IDLE), (IDLE)
	  30#      LT, (VAR, f), (INT, 3), (VAR, ##10)
	  31#      JF, (VAR, ##10), (IDLE), (ROTULO, 52)
	  32#     NOP, (IDLE), (IDLE), (IDLE)
	  33#   PARAM, (CADEIA, i = ), (IDLE), (IDLE)
	  34#   PARAM, (VAR, i), (IDLE), (IDLE)
	  35#   PARAM, (CADEIA,  j = ), (IDLE), (IDLE)
	  36#   PARAM, (VAR, j), (IDLE), (IDLE)
	  37#   PARAM, (CADEIA,  f = ), (IDLE), (IDLE)
	  38#   PARAM, (VAR, f), (IDLE), (IDLE)
	  39#   WRITE, (INT, 6), (IDLE), (IDLE)
	  40#   PARAM, (CADEIA, array[), (IDLE), (IDLE)
	  41#   PARAM, (VAR, f), (IDLE), (IDLE)
	  42#   PARAM, (CADEIA, ] = ), (IDLE), (IDLE)
	  43#     IND, (VAR, f), (IDLE), (IDLE)
	  44#   INDEX, (VAR, array), (INT, 1), (VAR, ##12)
	  45# CONTAPONT, (VAR, ##12), (IDLE), (VAR, ##13)
	  46#   PARAM, (VAR, ##13), (IDLE), (IDLE)
	  47#   WRITE, (INT, 4), (IDLE), (IDLE)
	  48#     NOP, (IDLE), (IDLE), (IDLE)
	  49#    MAIS, (VAR, f), (INT, 1), (VAR, ##11)
	  50#   ATRIB, (VAR, ##11), (IDLE), (VAR, f)
	  51#    JUMP, (IDLE), (IDLE), (ROTULO, 29)
	  52#     NOP, (IDLE), (IDLE), (IDLE)
	  53#     RET, (IDLE), (IDLE), (IDLE)


	INTERPRETADOR:

   1# OPENMOD
		Alocando as variaveis:
			     i:  1 elemento(s) alocado(s) 
   2# CALL
		Alocando as variaveis:
   1# OPENMOD
		Alocando as variaveis:
			  ##13:  1 elemento(s) alocado(s) 
			  ##12:  1 elemento(s) alocado(s) 
			  ##11:  1 elemento(s) alocado(s) 
			  ##10:  1 elemento(s) alocado(s) 
			   ##9:  1 elemento(s) alocado(s) 
			   ##8:  1 elemento(s) alocado(s) 
			   ##7:  1 elemento(s) alocado(s) 
			   ##6:  1 elemento(s) alocado(s) 
			   ##5:  1 elemento(s) alocado(s) 
			   ##4:  1 elemento(s) alocado(s) 
			 array:  3 elemento(s) alocado(s) 
			     f:  1 elemento(s) alocado(s) 
			     j:  1 elemento(s) alocado(s) 
   2# PARAM
   3# PARAM
   4# CALL
		Alocando as variaveis:
			  var2:  1 elemento(s) alocado(s) 
			  var1:  1 elemento(s) alocado(s) 
   1# OPENMOD
		Alocando as variaveis:
			   ##3:  1 elemento(s) alocado(s) 
			   ##2:  1 elemento(s) alocado(s) 
			     i:  1 elemento(s) alocado(s) 
   2# PARAM
   3# PARAM
   4# WRITE
		Escrevendo: 

var1 = 4

   5# PARAM
   6# PARAM
   7# WRITE
		Escrevendo: 

var2 = 2

   8# PARAM
   9# DIV
  10# PARAM
  11# WRITE
		Escrevendo: 

var1/var2 = 2

  12# MENOS
  13# RET
		Desalocando as variaveis:
			   ##3:  1 elemento(s) alocado(s) 
			   ##2:  1 elemento(s) alocado(s) 
			     i:  1 elemento(s) alocado(s) 
			  var2:  1 elemento(s) alocado(s) 
			  var1:  1 elemento(s) alocado(s) 
   5# ATRIB
   6# PARAM
   7# PARAM
   8# WRITE
		Escrevendo: 

4 - 2 = 2

   9# GT
  10# NOT
  11# JF
  14# NOP
  15# ATRIB
  16# NOP
  17# PARAM
  18# CALL
		Alocando as variaveis:
			 posic:  1 elemento(s) alocado(s) 
   1# OPENMOD
		Alocando as variaveis:
			   ##1:  1 elemento(s) alocado(s) 
			     i:  1 elemento(s) alocado(s) 
   2# MULT
   3# ATRIB
   4# PARAM
   5# PARAM
   6# WRITE
		Escrevendo: 

posic = 2

   7# PARAM
   8# PARAM
   9# WRITE
		Escrevendo: 

posic * 6 = 12

  10# RET
		Desalocando as variaveis:
			   ##1:  1 elemento(s) alocado(s) 
			     i:  1 elemento(s) alocado(s) 
			 posic:  1 elemento(s) alocado(s) 
  19# IND
  20# INDEX
  21# ATRIBPONT
  22# IND
  23# INDEX
  24# ATRIBPONT
  25# IND
  26# INDEX
  27# ATRIBPONT
  28# ATRIB
  29# NOP
  30# LT
  31# JF
  32# NOP
  33# PARAM
  34# PARAM
  35# PARAM
  36# PARAM
  37# PARAM
  38# PARAM
  39# WRITE
		Escrevendo: 

i = 2 j = 2 f = 0

  40# PARAM
  41# PARAM
  42# PARAM
  43# IND
  44# INDEX
  45# CONTAPONT
  46# PARAM
  47# WRITE
		Escrevendo: 

array[0] = 17

  48# NOP
  49# MAIS
  50# ATRIB
  51# JUMP
  29# NOP
  30# LT
  31# JF
  32# NOP
  33# PARAM
  34# PARAM
  35# PARAM
  36# PARAM
  37# PARAM
  38# PARAM
  39# WRITE
		Escrevendo: 

i = 2 j = 2 f = 1

  40# PARAM
  41# PARAM
  42# PARAM
  43# IND
  44# INDEX
  45# CONTAPONT
  46# PARAM
  47# WRITE
		Escrevendo: 

array[1] = 21

  48# NOP
  49# MAIS
  50# ATRIB
  51# JUMP
  29# NOP
  30# LT
  31# JF
  32# NOP
  33# PARAM
  34# PARAM
  35# PARAM
  36# PARAM
  37# PARAM
  38# PARAM
  39# WRITE
		Escrevendo: 

i = 2 j = 2 f = 2

  40# PARAM
  41# PARAM
  42# PARAM
  43# IND
  44# INDEX
  45# CONTAPONT
  46# PARAM
  47# WRITE
		Escrevendo: 

array[2] = 11

  48# NOP
  49# MAIS
  50# ATRIB
  51# JUMP
  29# NOP
  30# LT
  31# JF
  52# NOP
  53# RET
		Desalocando as variaveis:
			  ##13:  1 elemento(s) alocado(s) 
			  ##12:  1 elemento(s) alocado(s) 
			  ##11:  1 elemento(s) alocado(s) 
			  ##10:  1 elemento(s) alocado(s) 
			   ##9:  1 elemento(s) alocado(s) 
			   ##8:  1 elemento(s) alocado(s) 
			   ##7:  1 elemento(s) alocado(s) 
			   ##6:  1 elemento(s) alocado(s) 
			   ##5:  1 elemento(s) alocado(s) 
			   ##4:  1 elemento(s) alocado(s) 
			 array:  3 elemento(s) alocado(s) 
			     f:  1 elemento(s) alocado(s) 
			     j:  1 elemento(s) alocado(s) 
   3# EXIT